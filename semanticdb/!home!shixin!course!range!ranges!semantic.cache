;; Object ranges/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "ranges/"
  :tables
  (list
    (semanticdb-table "main.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("adjacent.hpp" include nil nil [1 24])
            ("cartesian_product.hpp" include nil nil [25 57])
            ("transform.hpp" include nil nil [58 82])
            ("zip.hpp" include nil nil [83 101])
            ("algorithm.hpp" include nil nil [103 127])
            ("variadic.hpp" include nil nil [128 151])
            ("iostream" include (:system-flag t) nil [153 172])
            ("sstream" include (:system-flag t) nil [173 191])
            ("vector" include (:system-flag t) nil [192 209])
            ("unnamed" type
               (:members 
                  ( ("multiplyBy2" function
                       (:arguments 
                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [240 246]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [224 268])
                    ("testTransform" function (:type "bool") (reparse-symbol namespacesubparts) [270 565])
                    ("letterPlusNumber" function
                       (:arguments 
                          ( ("line" variable (:type "char") (reparse-symbol arg-sub-list) [596 606])
                            ("column" variable (:type "int") (reparse-symbol arg-sub-list) [607 618]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [567 714])
                    ("testZip" function (:type "bool") (reparse-symbol namespacesubparts) [716 1098])
                    ("testCartesianProduct" function (:type "bool") (reparse-symbol namespacesubparts) [1100 1797])
                    ("letterToNext" function
                       (:arguments 
                          ( ("letter" variable (:type "char") (reparse-symbol arg-sub-list) [1824 1836])
                            ("next" variable (:type "char") (reparse-symbol arg-sub-list) [1837 1847]))                          
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1799 1944])
                    ("testAdjacentAdaptor" function (:type "bool") (reparse-symbol namespacesubparts) [1946 2297])
                    ("testConsecutiveFunction" function (:type "bool") (reparse-symbol namespacesubparts) [2299 2656])
                    ("testAdjacent" function (:type "bool") (reparse-symbol namespacesubparts) [2658 2744])
                    ("testResult" function
                       (:template 
                          ( ("Function" type (:type "class") nil nil))                          
                        :type ("std::string" type (:type "class") nil nil)
                        :arguments 
                          ( ("test" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2798 2812]))                          )
                        (reparse-symbol namespacesubparts) [2746 2857])
                    ("launchTests" function (:type "void") (reparse-symbol namespacesubparts) [2859 3206]))                  
                :type "namespace")
                nil [211 3209])
            ("main" function (:type "int") nil [3211 3244]))          
      :file "main.cpp"
      :pointmax 3250
      :fsize 3249
      :lastmodtime '(22909 41501 786018 375000)
      :unmatched-syntax nil)
    (semanticdb-table "adjacent.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ADJACENT_HPP" variable (:constant-flag t) nil [30 42])
            ("iterator_range.hpp" include nil nil [308 337])
            ("named_type.hpp" include nil nil [338 363])
            ("iterator" include (:system-flag t) nil [365 384])
            ("utility" include (:system-flag t) nil [385 403])
            ("ranges" type
               (:members (((("NamedType" 0 nil nil nil)) variable (:type "int") (reparse-symbol namespacesubparts) [475 517]) ((("NamedType" 0 nil nil nil)) variable (:type "int") (reparse-symbol namespacesubparts) [566 606]) ("view" type (:members (("adjacent_adaptor" type (:type "class") (reparse-symbol namespacesubparts) [2900 2926]) ((("adjacent" 0 nil nil nil)) variable (:type ("adjacent_adaptor" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2927 2953])) :type "namespace") (reparse-symbol namespacesubparts) [2418 3130]))
                :type "namespace")
                nil [405 3150]))          
      :file "adjacent.hpp"
      :pointmax 3180
      :fsize 3179
      :lastmodtime '(22909 22924 34551 371000)
      :unmatched-syntax '((semantic-list 3089 . 3123) (punctuation 3087 . 3088) (punctuation 3086 . 3087) (semantic-list 3071 . 3086) (symbol 3063 . 3071) (semantic-list 3083 . 3085) (punctuation 3077 . 3078) (punctuation 3062 . 3063) (symbol 3045 . 3062) (punctuation 3044 . 3045) (symbol 3030 . 3044) (punctuation 3028 . 3029) (punctuation 3027 . 3028) (semantic-list 2994 . 3026) (punctuation 2993 . 2994) (OPERATOR 2985 . 2993) (symbol 2980 . 2984) (punctuation 2978 . 2979) (symbol 2973 . 2978) (TYPENAME 2964 . 2972) (punctuation 2963 . 2964) (TEMPLATE 2955 . 2963) (semantic-list 2554 . 2898) (punctuation 2552 . 2553) (punctuation 2551 . 2552) (semantic-list 2536 . 2551) (symbol 2528 . 2536) (semantic-list 2548 . 2550) (punctuation 2542 . 2543) (punctuation 2527 . 2528) (symbol 2510 . 2527) (punctuation 2509 . 2510) (symbol 2495 . 2509) (punctuation 2493 . 2494) (punctuation 2492 . 2493) (semantic-list 2477 . 2491) (symbol 2466 . 2477) (symbol 2461 . 2465) (punctuation 2459 . 2460) (symbol 2454 . 2459) (TYPENAME 2445 . 2453) (punctuation 2444 . 2445) (TEMPLATE 2436 . 2444) (punctuation 2415 . 2416) (semantic-list 1435 . 2415) (punctuation 1433 . 1434) (punctuation 1405 . 1406) (punctuation 1404 . 1405) (symbol 1394 . 1404) (punctuation 1393 . 1394) (punctuation 1392 . 1393) (punctuation 1391 . 1392) (symbol 1373 . 1391) (punctuation 1372 . 1373) (symbol 1357 . 1372) (punctuation 1356 . 1357) (punctuation 1355 . 1356) (symbol 1352 . 1355) (TYPENAME 1343 . 1351) (punctuation 1341 . 1342) (symbol 1331 . 1341) (punctuation 1330 . 1331) (punctuation 1329 . 1330) (punctuation 1328 . 1329) (symbol 1310 . 1328) (punctuation 1309 . 1310) (symbol 1294 . 1309) (punctuation 1293 . 1294) (punctuation 1292 . 1293) (symbol 1289 . 1292) (TYPENAME 1280 . 1288) (punctuation 1279 . 1280) (symbol 1275 . 1279) (punctuation 1274 . 1275) (punctuation 1273 . 1274) (symbol 1270 . 1273) (CONST 1264 . 1269) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (punctuation 1230 . 1231) (symbol 1220 . 1230) (punctuation 1219 . 1220) (punctuation 1218 . 1219) (punctuation 1217 . 1218) (symbol 1199 . 1217) (punctuation 1198 . 1199) (symbol 1183 . 1198) (punctuation 1182 . 1183) (punctuation 1181 . 1182) (symbol 1178 . 1181) (TYPENAME 1169 . 1177) (punctuation 1167 . 1168) (symbol 1157 . 1167) (punctuation 1156 . 1157) (punctuation 1155 . 1156) (punctuation 1154 . 1155) (symbol 1136 . 1154) (punctuation 1135 . 1136) (symbol 1120 . 1135) (punctuation 1119 . 1120) (punctuation 1118 . 1119) (symbol 1115 . 1118) (TYPENAME 1106 . 1114) (punctuation 1105 . 1106) (symbol 1101 . 1105) (punctuation 1100 . 1101) (punctuation 1099 . 1100) (symbol 1096 . 1099) (CONST 1090 . 1095) (punctuation 1058 . 1059) (symbol 1043 . 1058) (punctuation 1042 . 1043) (punctuation 1041 . 1042) (punctuation 1040 . 1041) (symbol 1022 . 1040) (punctuation 1021 . 1022) (symbol 1006 . 1021) (punctuation 1005 . 1006) (punctuation 1004 . 1005) (symbol 1001 . 1004) (TYPENAME 992 . 1000) (punctuation 960 . 961) (punctuation 959 . 960) (symbol 949 . 959) (punctuation 948 . 949) (punctuation 947 . 948) (punctuation 946 . 947) (symbol 928 . 946) (punctuation 927 . 928) (symbol 912 . 927) (punctuation 911 . 912) (punctuation 910 . 911) (symbol 907 . 910) (TYPENAME 898 . 906) (punctuation 896 . 897) (symbol 886 . 896) (punctuation 885 . 886) (punctuation 884 . 885) (punctuation 883 . 884) (symbol 865 . 883) (punctuation 864 . 865) (symbol 849 . 864) (punctuation 848 . 849) (punctuation 847 . 848) (symbol 844 . 847) (TYPENAME 835 . 843) (punctuation 834 . 835) (symbol 830 . 834) (punctuation 829 . 830) (punctuation 828 . 829) (symbol 825 . 828) (punctuation 793 . 794) (symbol 776 . 793) (punctuation 775 . 776) (punctuation 774 . 775) (punctuation 773 . 774) (symbol 755 . 773) (punctuation 754 . 755) (symbol 739 . 754) (punctuation 738 . 739) (punctuation 737 . 738) (symbol 734 . 737) (TYPENAME 725 . 733) (punctuation 693 . 694) (symbol 685 . 693) (punctuation 684 . 685) (punctuation 683 . 684) (symbol 680 . 683) (PUBLIC 673 . 679) (punctuation 671 . 672) (symbol 652 . 669) (CLASS 646 . 651) (punctuation 644 . 645) (symbol 626 . 644) (TYPENAME 617 . 625) (punctuation 616 . 617) (TEMPLATE 608 . 616) (punctuation 564 . 565) (symbol 552 . 563) (USING 546 . 551) (punctuation 544 . 545) (symbol 536 . 544) (TYPENAME 527 . 535) (punctuation 526 . 527) (TEMPLATE 518 . 526) (punctuation 473 . 474) (symbol 459 . 472) (USING 453 . 458) (punctuation 451 . 452) (symbol 443 . 451) (TYPENAME 434 . 442) (punctuation 433 . 434) (TEMPLATE 425 . 433))
      :lexical-table 
        '(("ADJACENT_HPP")
          )
)
    (semanticdb-table "cartesian_product.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("VIEW_CARTESIAN_PRODUCT_HPP" variable (:constant-flag t) nil [44 70])
            ("iterator_range.hpp" include nil nil [518 547])
            ("named_type.hpp" include nil nil [548 573])
            ("variadic.hpp" include nil nil [574 597])
            ("iterator" include (:system-flag t) nil [598 617])
            ("ranges" type
               (:members (((("NamedTypeRef" 0 nil nil nil)) variable (:type "int") (reparse-symbol namespacesubparts) [692 737]) ((("NamedTypeRef" 0 nil nil nil)) variable (:type "int") (reparse-symbol namespacesubparts) [789 832]) ("Advance_cartesian_impl" type (:type "struct") (reparse-symbol namespacesubparts) [876 1230]) ("Distance_cartesian_impl" type (:type "struct") (reparse-symbol namespacesubparts) [1778 2193]) ("begin_tag" type (:type "struct") (reparse-symbol namespacesubparts) [2860 2879]) ("end_tag" type (:type "struct") (reparse-symbol namespacesubparts) [2880 2897]) ("view" type (:type "namespace") (reparse-symbol namespacesubparts) [4958 5296]))
                :type "namespace")
                nil [619 5316]))          
      :file "cartesian_product.hpp"
      :pointmax 5345
      :fsize 5344
      :lastmodtime '(22909 22924 38551 371000)
      :unmatched-syntax '((semantic-list 5053 . 5289) (semantic-list 5027 . 5052) (symbol 5010 . 5027) (punctuation 5043 . 5044) (punctuation 5042 . 5043) (punctuation 5041 . 5042) (symbol 5005 . 5009) (punctuation 5043 . 5044) (punctuation 5042 . 5043) (punctuation 5041 . 5042) (punctuation 5003 . 5004) (symbol 4997 . 5003) (punctuation 4995 . 4996) (punctuation 4994 . 4995) (punctuation 4993 . 4994) (TYPENAME 4985 . 4993) (punctuation 4984 . 4985) (TEMPLATE 4976 . 4984) (punctuation 4955 . 4956) (semantic-list 3647 . 4955) (punctuation 3645 . 3646) (punctuation 3617 . 3618) (punctuation 3616 . 3617) (punctuation 3615 . 3616) (punctuation 3614 . 3615) (punctuation 3613 . 3614) (symbol 3604 . 3613) (punctuation 3603 . 3604) (punctuation 3602 . 3603) (punctuation 3601 . 3602) (symbol 3587 . 3601) (punctuation 3586 . 3587) (punctuation 3585 . 3586) (symbol 3579 . 3585) (TYPENAME 3570 . 3578) (punctuation 3569 . 3570) (symbol 3554 . 3569) (punctuation 3553 . 3554) (punctuation 3552 . 3553) (symbol 3549 . 3552) (TYPENAME 3540 . 3548) (punctuation 3539 . 3540) (symbol 3534 . 3539) (punctuation 3533 . 3534) (punctuation 3532 . 3533) (symbol 3529 . 3532) (CONST 3523 . 3528) (punctuation 3491 . 3492) (punctuation 3490 . 3491) (punctuation 3489 . 3490) (punctuation 3488 . 3489) (punctuation 3487 . 3488) (punctuation 3486 . 3487) (symbol 3477 . 3486) (punctuation 3476 . 3477) (punctuation 3475 . 3476) (punctuation 3474 . 3475) (symbol 3460 . 3474) (punctuation 3459 . 3460) (punctuation 3458 . 3459) (symbol 3452 . 3458) (TYPENAME 3443 . 3451) (punctuation 3442 . 3443) (symbol 3427 . 3442) (punctuation 3426 . 3427) (punctuation 3425 . 3426) (symbol 3422 . 3425) (TYPENAME 3413 . 3421) (punctuation 3412 . 3413) (symbol 3407 . 3412) (punctuation 3406 . 3407) (punctuation 3405 . 3406) (symbol 3402 . 3405) (CONST 3396 . 3401) (punctuation 3364 . 3365) (symbol 3349 . 3364) (punctuation 3348 . 3349) (punctuation 3347 . 3348) (punctuation 3346 . 3347) (punctuation 3345 . 3346) (punctuation 3344 . 3345) (punctuation 3343 . 3344) (punctuation 3342 . 3343) (symbol 3328 . 3342) (punctuation 3327 . 3328) (punctuation 3326 . 3327) (symbol 3320 . 3326) (TYPENAME 3311 . 3319) (punctuation 3309 . 3310) (number 3308 . 3309) (punctuation 3307 . 3308) (symbol 3297 . 3307) (punctuation 3296 . 3297) (symbol 3281 . 3296) (punctuation 3280 . 3281) (punctuation 3279 . 3280) (symbol 3276 . 3279) (TYPENAME 3267 . 3275) (punctuation 3235 . 3236) (punctuation 3234 . 3235) (punctuation 3233 . 3234) (punctuation 3232 . 3233) (punctuation 3231 . 3232) (symbol 3222 . 3231) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (symbol 3205 . 3219) (punctuation 3204 . 3205) (punctuation 3203 . 3204) (symbol 3197 . 3203) (TYPENAME 3188 . 3196) (punctuation 3187 . 3188) (symbol 3172 . 3187) (punctuation 3171 . 3172) (punctuation 3170 . 3171) (symbol 3167 . 3170) (TYPENAME 3158 . 3166) (punctuation 3157 . 3158) (symbol 3152 . 3157) (punctuation 3151 . 3152) (punctuation 3150 . 3151) (symbol 3147 . 3150) (punctuation 3115 . 3116) (symbol 3098 . 3115) (punctuation 3097 . 3098) (punctuation 3096 . 3097) (punctuation 3095 . 3096) (punctuation 3094 . 3095) (punctuation 3093 . 3094) (punctuation 3092 . 3093) (punctuation 3091 . 3092) (symbol 3077 . 3091) (punctuation 3076 . 3077) (punctuation 3075 . 3076) (symbol 3069 . 3075) (TYPENAME 3060 . 3068) (punctuation 3058 . 3059) (number 3057 . 3058) (punctuation 3056 . 3057) (symbol 3046 . 3056) (punctuation 3045 . 3046) (symbol 3030 . 3045) (punctuation 3029 . 3030) (punctuation 3028 . 3029) (symbol 3025 . 3028) (TYPENAME 3016 . 3024) (punctuation 2984 . 2985) (symbol 2976 . 2984) (punctuation 2975 . 2976) (punctuation 2974 . 2975) (symbol 2971 . 2974) (PUBLIC 2964 . 2970) (punctuation 2962 . 2963) (symbol 2934 . 2960) (CLASS 2928 . 2933) (punctuation 2926 . 2927) (symbol 2920 . 2926) (punctuation 2918 . 2919) (punctuation 2917 . 2918) (punctuation 2916 . 2917) (TYPENAME 2908 . 2916) (punctuation 2907 . 2908) (TEMPLATE 2899 . 2907) (semantic-list 2744 . 2858) (semantic-list 2577 . 2743) (symbol 2559 . 2577) (punctuation 2736 . 2737) (CONST 2731 . 2736) (punctuation 2729 . 2730) (punctuation 2728 . 2729) (punctuation 2727 . 2728) (punctuation 2726 . 2727) (punctuation 2716 . 2717) (punctuation 2696 . 2697) (CONST 2691 . 2696) (punctuation 2689 . 2690) (punctuation 2688 . 2689) (punctuation 2687 . 2688) (punctuation 2686 . 2687) (punctuation 2676 . 2677) (punctuation 2652 . 2653) (CONST 2647 . 2652) (punctuation 2645 . 2646) (punctuation 2644 . 2645) (punctuation 2643 . 2644) (punctuation 2642 . 2643) (punctuation 2632 . 2633) (punctuation 2608 . 2609) (CONST 2603 . 2608) (punctuation 2601 . 2602) (punctuation 2600 . 2601) (punctuation 2599 . 2600) (punctuation 2598 . 2599) (punctuation 2588 . 2589) (symbol 2552 . 2558) (punctuation 2736 . 2737) (CONST 2731 . 2736) (punctuation 2729 . 2730) (punctuation 2728 . 2729) (punctuation 2727 . 2728) (punctuation 2726 . 2727) (punctuation 2716 . 2717) (punctuation 2696 . 2697) (CONST 2691 . 2696) (punctuation 2689 . 2690) (punctuation 2688 . 2689) (punctuation 2687 . 2688) (punctuation 2686 . 2687) (punctuation 2676 . 2677) (punctuation 2652 . 2653) (CONST 2647 . 2652) (punctuation 2645 . 2646) (punctuation 2644 . 2645) (punctuation 2643 . 2644) (punctuation 2642 . 2643) (punctuation 2632 . 2633) (punctuation 2608 . 2609) (CONST 2603 . 2608) (punctuation 2601 . 2602) (punctuation 2600 . 2601) (punctuation 2599 . 2600) (punctuation 2598 . 2599) (punctuation 2588 . 2589) (punctuation 2550 . 2551) (symbol 2541 . 2550) (punctuation 2539 . 2540) (punctuation 2538 . 2539) (punctuation 2537 . 2538) (TYPENAME 2529 . 2537) (punctuation 2528 . 2529) (TEMPLATE 2520 . 2528) (punctuation 2517 . 2518) (semantic-list 2275 . 2517) (punctuation 2273 . 2274) (punctuation 2272 . 2273) (punctuation 2271 . 2272) (punctuation 2270 . 2271) (symbol 2261 . 2270) (punctuation 2259 . 2260) (number 2258 . 2259) (punctuation 2257 . 2258) (symbol 2234 . 2257) (STRUCT 2227 . 2233) (punctuation 2225 . 2226) (symbol 2216 . 2225) (punctuation 2214 . 2215) (punctuation 2213 . 2214) (punctuation 2212 . 2213) (TYPENAME 2204 . 2212) (punctuation 2203 . 2204) (TEMPLATE 2195 . 2203) (semantic-list 1997 . 2190) (semantic-list 1829 . 1995) (semantic-list 1827 . 1829) (OPERATOR 1819 . 1827) (punctuation 1988 . 1989) (CONST 1983 . 1988) (punctuation 1981 . 1982) (punctuation 1980 . 1981) (punctuation 1979 . 1980) (punctuation 1978 . 1979) (punctuation 1968 . 1969) (punctuation 1948 . 1949) (CONST 1943 . 1948) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (punctuation 1938 . 1939) (punctuation 1928 . 1929) (punctuation 1904 . 1905) (CONST 1899 . 1904) (punctuation 1897 . 1898) (punctuation 1896 . 1897) (punctuation 1895 . 1896) (punctuation 1894 . 1895) (punctuation 1884 . 1885) (punctuation 1860 . 1861) (CONST 1855 . 1860) (punctuation 1853 . 1854) (punctuation 1852 . 1853) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (symbol 1812 . 1818) (punctuation 1988 . 1989) (CONST 1983 . 1988) (punctuation 1981 . 1982) (punctuation 1980 . 1981) (punctuation 1979 . 1980) (punctuation 1978 . 1979) (punctuation 1968 . 1969) (punctuation 1948 . 1949) (CONST 1943 . 1948) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (punctuation 1938 . 1939) (punctuation 1928 . 1929) (punctuation 1904 . 1905) (CONST 1899 . 1904) (punctuation 1897 . 1898) (punctuation 1896 . 1897) (punctuation 1895 . 1896) (punctuation 1894 . 1895) (punctuation 1884 . 1885) (punctuation 1860 . 1861) (CONST 1855 . 1860) (punctuation 1853 . 1854) (punctuation 1852 . 1853) (punctuation 1851 . 1852) (punctuation 1850 . 1851) (punctuation 1840 . 1841) (punctuation 1776 . 1777) (symbol 1767 . 1776) (punctuation 1765 . 1766) (punctuation 1764 . 1765) (punctuation 1763 . 1764) (TYPENAME 1755 . 1763) (punctuation 1753 . 1754) (symbol 1752 . 1753) (symbol 1745 . 1751) (punctuation 1744 . 1745) (TEMPLATE 1736 . 1744) (semantic-list 1641 . 1734) (semantic-list 1525 . 1640) (symbol 1508 . 1525) (punctuation 1633 . 1634) (CONST 1628 . 1633) (punctuation 1626 . 1627) (punctuation 1625 . 1626) (punctuation 1624 . 1625) (punctuation 1623 . 1624) (punctuation 1613 . 1614) (punctuation 1593 . 1594) (CONST 1588 . 1593) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (punctuation 1584 . 1585) (punctuation 1583 . 1584) (punctuation 1573 . 1574) (punctuation 1550 . 1551) (punctuation 1549 . 1550) (punctuation 1548 . 1549) (punctuation 1547 . 1548) (punctuation 1546 . 1547) (punctuation 1536 . 1537) (VOID 1503 . 1507) (punctuation 1633 . 1634) (CONST 1628 . 1633) (punctuation 1626 . 1627) (punctuation 1625 . 1626) (punctuation 1624 . 1625) (punctuation 1623 . 1624) (punctuation 1613 . 1614) (punctuation 1593 . 1594) (CONST 1588 . 1593) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (punctuation 1584 . 1585) (punctuation 1583 . 1584) (punctuation 1573 . 1574) (punctuation 1550 . 1551) (punctuation 1549 . 1550) (punctuation 1548 . 1549) (punctuation 1547 . 1548) (punctuation 1546 . 1547) (punctuation 1536 . 1537) (punctuation 1501 . 1502) (symbol 1492 . 1501) (punctuation 1490 . 1491) (punctuation 1489 . 1490) (punctuation 1488 . 1489) (TYPENAME 1480 . 1488) (punctuation 1479 . 1480) (TEMPLATE 1471 . 1479) (punctuation 1468 . 1469) (semantic-list 1311 . 1468) (punctuation 1309 . 1310) (punctuation 1308 . 1309) (punctuation 1307 . 1308) (punctuation 1306 . 1307) (symbol 1297 . 1306) (punctuation 1295 . 1296) (number 1294 . 1295) (punctuation 1293 . 1294) (symbol 1271 . 1293) (STRUCT 1264 . 1270) (punctuation 1262 . 1263) (symbol 1253 . 1262) (punctuation 1251 . 1252) (punctuation 1250 . 1251) (punctuation 1249 . 1250) (TYPENAME 1241 . 1249) (punctuation 1240 . 1241) (TEMPLATE 1232 . 1240) (semantic-list 1041 . 1227) (semantic-list 924 . 1039) (semantic-list 922 . 924) (OPERATOR 914 . 922) (punctuation 1032 . 1033) (CONST 1027 . 1032) (punctuation 1025 . 1026) (punctuation 1024 . 1025) (punctuation 1023 . 1024) (punctuation 1022 . 1023) (punctuation 1012 . 1013) (punctuation 992 . 993) (CONST 987 . 992) (punctuation 985 . 986) (punctuation 984 . 985) (punctuation 983 . 984) (punctuation 982 . 983) (punctuation 972 . 973) (punctuation 949 . 950) (punctuation 948 . 949) (punctuation 947 . 948) (punctuation 946 . 947) (punctuation 945 . 946) (punctuation 935 . 936) (VOID 909 . 913) (punctuation 1032 . 1033) (CONST 1027 . 1032) (punctuation 1025 . 1026) (punctuation 1024 . 1025) (punctuation 1023 . 1024) (punctuation 1022 . 1023) (punctuation 1012 . 1013) (punctuation 992 . 993) (CONST 987 . 992) (punctuation 985 . 986) (punctuation 984 . 985) (punctuation 983 . 984) (punctuation 982 . 983) (punctuation 972 . 973) (punctuation 949 . 950) (punctuation 948 . 949) (punctuation 947 . 948) (punctuation 946 . 947) (punctuation 945 . 946) (punctuation 935 . 936) (punctuation 874 . 875) (symbol 865 . 874) (punctuation 863 . 864) (punctuation 862 . 863) (punctuation 861 . 862) (TYPENAME 853 . 861) (punctuation 851 . 852) (symbol 850 . 851) (symbol 843 . 849) (punctuation 842 . 843) (TEMPLATE 834 . 842) (punctuation 787 . 788) (symbol 772 . 786) (USING 766 . 771) (punctuation 764 . 765) (symbol 756 . 764) (TYPENAME 747 . 755) (punctuation 746 . 747) (TEMPLATE 738 . 746) (punctuation 690 . 691) (symbol 673 . 689) (USING 667 . 672) (punctuation 665 . 666) (symbol 657 . 665) (TYPENAME 648 . 656) (punctuation 647 . 648) (TEMPLATE 639 . 647))
      :lexical-table 
        '(("VIEW_CARTESIAN_PRODUCT_HPP")
          )
)
    (semanticdb-table "transform.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("TRANSFORM_HPP" variable (:constant-flag t) nil [31 44])
            ("iterator_range.hpp" include nil nil [46 75])
            ("iterator" include (:system-flag t) nil [77 96])
            ("type_traits" include (:system-flag t) nil [97 119])
            ("ranges" type
               (:members 
                  ( ("make_transform_iterator" function
                       (:template 
                          ( ("Iterator" type (:type "class") nil nil)
                            ("Function" type (:type "class") nil nil))                          
                        :type ("transform_iterator" type
                             (:template-specifier 
                                ( ("Iterator" type nil nil nil)
                                  ("Function" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("underlyingIterator" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1617 1645])
                            ("func" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1646 1660]))                          )
                        (reparse-symbol namespacesubparts) [1507 1738])
                    ("view" type
                       (:members 
                          ( ("transform_adaptor" type
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [1812 1819])
                                    ("transform_adaptor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("func" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1848 1862]))                                          
                                        :type ("transform_adaptor" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [1830 1879])
                                    ("getFunction" function (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1881 1925])
                                    ("private" label nil (reparse-symbol classsubparts) [1926 1934])
                                    ("func_" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1936 1951]))                                  )
                                (reparse-symbol namespacesubparts) [1758 1954])
                            ("transform" function
                               (:template 
                                  ( ("Function" type (:type "class") nil nil))                                  
                                :type ("transform_adaptor" type
                                     (:template-specifier 
                                        ( ("Function" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("func" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2022 2036]))                                  )
                                (reparse-symbol namespacesubparts) [1956 2083])
                            ("|" function
                               (:operator-flag t
                                :arguments 
                                  ( ("range" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Range" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2216 2235])
                                    ("adaptor" variable (:type ("transform_adaptor" type
                                         (:template-specifier 
                                            ( ("Function" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [2236 2272]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2206 2491]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1740 2498]))                  
                :type "namespace")
                nil [121 2518]))          
      :file "transform.hpp"
      :pointmax 2547
      :fsize 2546
      :lastmodtime '(22909 59080 809514 33000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TRANSFORM_HPP")
          )
)
    (semanticdb-table "zip.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ZIP_HPP" variable (:constant-flag t) nil [25 32])
            ("iterator_range.hpp" include nil nil [277 306])
            ("variadic.hpp" include nil nil [307 330])
            ("iterator" include (:system-flag t) nil [332 351])
            ("tuple" include (:system-flag t) nil [352 368])
            ("ranges" type
               (:members 
                  ( ("make_zip_iterator" function
                       (:arguments 
                          ( ("" variable (:type ("Iterators" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1857 1867])
                            ("" variable (:type ("underlyingIterators" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1870 1890]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [1839 1954])
                    ("view" type
                       (:members 
                          ( ("zip" function
                               (:arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Ranges" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2072 2086])
                                    ("" variable (:type ("ranges" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2089 2096]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2068 2258]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1956 2265]))                  
                :type "namespace")
                nil [370 2285]))          
      :file "zip.hpp"
      :pointmax 2315
      :fsize 2314
      :lastmodtime '(22909 22924 38551 371000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ZIP_HPP")
          )
)
    (semanticdb-table "algorithm.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ALGORITHM_HPP" variable (:constant-flag t) nil [31 44])
            ("algorithm" include (:system-flag t) nil [46 66])
            ("copy" function
               (:template 
                  ( ("Range" type (:type "class") nil nil)
                    ("Iterator" type (:type "class") nil nil))                  
                :type ("Iterator" type (:type "class") nil nil)
                :arguments 
                  ( ("range" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [126 145])
                    ("output" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [146 162]))                  )
                nil [68 221])
            ("for_each" function
               (:template 
                  ( ("Range" type (:type "class") nil nil)
                    ("Function" type (:type "class") nil nil))                  
                :type ("Function" type (:type "class") nil nil)
                :arguments 
                  ( ("range" variable
                       (:reference 1
                        :constant-flag t
                        :type ("Range" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [285 304])
                    ("func" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [305 319]))                  )
                nil [223 380])
            ("ranges" type
               (:members 
                  ( ("push_back" function
                       (:template 
                          ( ("DestinationContainer" type (:type "class") nil nil)
                            ("SourceRange" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("destination" variable
                               (:reference 1
                                :type ("DestinationContainer" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [479 513])
                            ("source" variable
                               (:reference 1
                                :constant-flag t
                                :type ("SourceRange" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [514 540]))                          )
                        (reparse-symbol namespacesubparts) [402 595]))                  
                :type "namespace")
                nil [382 602]))          
      :file "algorithm.hpp"
      :pointmax 611
      :fsize 610
      :lastmodtime '(22909 22924 34551 371000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ALGORITHM_HPP")
          )
)
    (semanticdb-table "variadic.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("VARIADIC_HPP" variable (:constant-flag t) nil [30 42])
            ("tuple" include (:system-flag t) nil [44 60])
            ("utility" include (:system-flag t) nil [61 79])
            ("For_each_tuple_impl" type (:type "struct") nil [1214 1468])
            ("get_type" type
               (:members (((("type" 0 nil nil nil)) variable (:type "int") (reparse-symbol classsubparts) [2317 2322]))
                :type "struct")
                nil [2251 2325])
            ((("type" 0 nil nil nil)) variable (:type "int") nil [2505 2510])
            ("Get_value" type (:type "struct") nil [2559 2680]))          
      :file "variadic.hpp"
      :pointmax 2981
      :fsize 2980
      :lastmodtime '(22909 22924 38551 371000)
      :unmatched-syntax '((semantic-list 2889 . 2971) (semantic-list 2869 . 2888) (symbol 2860 . 2869) (punctuation 2883 . 2884) (punctuation 2882 . 2883) (punctuation 2881 . 2882) (punctuation 2880 . 2881) (punctuation 2872 . 2873) (punctuation 2858 . 2859) (symbol 2854 . 2858) (punctuation 2883 . 2884) (punctuation 2882 . 2883) (punctuation 2881 . 2882) (punctuation 2880 . 2881) (punctuation 2872 . 2873) (punctuation 2852 . 2853) (symbol 2850 . 2852) (punctuation 2848 . 2849) (punctuation 2847 . 2848) (punctuation 2846 . 2847) (TYPENAME 2838 . 2846) (punctuation 2836 . 2837) (symbol 2835 . 2836) (TYPENAME 2826 . 2834) (punctuation 2824 . 2825) (symbol 2823 . 2824) (symbol 2816 . 2822) (punctuation 2815 . 2816) (TEMPLATE 2807 . 2815) (punctuation 2804 . 2805) (semantic-list 2749 . 2804) (punctuation 2747 . 2748) (punctuation 2746 . 2747) (punctuation 2745 . 2746) (punctuation 2744 . 2745) (symbol 2742 . 2744) (punctuation 2740 . 2741) (symbol 2739 . 2740) (punctuation 2737 . 2738) (number 2736 . 2737) (punctuation 2735 . 2736) (symbol 2726 . 2735) (STRUCT 2719 . 2725) (punctuation 2717 . 2718) (symbol 2715 . 2717) (punctuation 2713 . 2714) (punctuation 2712 . 2713) (punctuation 2711 . 2712) (TYPENAME 2703 . 2711) (punctuation 2701 . 2702) (symbol 2700 . 2701) (TYPENAME 2691 . 2699) (punctuation 2690 . 2691) (TEMPLATE 2682 . 2690) (semantic-list 2614 . 2677) (semantic-list 2595 . 2612) (semantic-list 2593 . 2595) (OPERATOR 2585 . 2593) (punctuation 2607 . 2608) (punctuation 2606 . 2607) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (punctuation 2598 . 2599) (punctuation 2583 . 2584) (symbol 2579 . 2583) (punctuation 2607 . 2608) (punctuation 2606 . 2607) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (punctuation 2598 . 2599) (punctuation 2557 . 2558) (symbol 2555 . 2557) (punctuation 2553 . 2554) (punctuation 2552 . 2553) (punctuation 2551 . 2552) (TYPENAME 2543 . 2551) (punctuation 2541 . 2542) (symbol 2540 . 2541) (TYPENAME 2531 . 2539) (punctuation 2529 . 2530) (symbol 2528 . 2529) (symbol 2521 . 2527) (punctuation 2520 . 2521) (TEMPLATE 2512 . 2520) (punctuation 2504 . 2505) (punctuation 2503 . 2504) (punctuation 2502 . 2503) (punctuation 2501 . 2502) (punctuation 2500 . 2501) (punctuation 2499 . 2500) (symbol 2497 . 2499) (punctuation 2495 . 2496) (symbol 2494 . 2495) (punctuation 2493 . 2494) (symbol 2485 . 2493) (TYPENAME 2476 . 2484) (USING 2457 . 2462) (punctuation 2455 . 2456) (symbol 2453 . 2455) (punctuation 2451 . 2452) (punctuation 2450 . 2451) (punctuation 2449 . 2450) (TYPENAME 2441 . 2449) (punctuation 2439 . 2440) (symbol 2438 . 2439) (symbol 2431 . 2437) (punctuation 2430 . 2431) (TEMPLATE 2422 . 2430) (punctuation 2419 . 2420) (semantic-list 2395 . 2419) (punctuation 2393 . 2394) (punctuation 2392 . 2393) (punctuation 2391 . 2392) (punctuation 2390 . 2391) (symbol 2388 . 2390) (punctuation 2386 . 2387) (symbol 2384 . 2386) (punctuation 2382 . 2383) (number 2381 . 2382) (punctuation 2380 . 2381) (symbol 2372 . 2380) (STRUCT 2365 . 2371) (punctuation 2363 . 2364) (symbol 2361 . 2363) (punctuation 2359 . 2360) (punctuation 2358 . 2359) (punctuation 2357 . 2358) (TYPENAME 2349 . 2357) (punctuation 2347 . 2348) (symbol 2345 . 2347) (TYPENAME 2336 . 2344) (punctuation 2335 . 2336) (TEMPLATE 2327 . 2335) (punctuation 2316 . 2317) (punctuation 2315 . 2316) (punctuation 2314 . 2315) (punctuation 2313 . 2314) (punctuation 2312 . 2313) (punctuation 2311 . 2312) (symbol 2309 . 2311) (punctuation 2307 . 2308) (number 2306 . 2307) (punctuation 2305 . 2306) (symbol 2304 . 2305) (punctuation 2303 . 2304) (symbol 2295 . 2303) (TYPENAME 2286 . 2294) (punctuation 2284 . 2285) (symbol 2279 . 2283) (USING 2273 . 2278) (punctuation 2249 . 2250) (symbol 2247 . 2249) (punctuation 2245 . 2246) (punctuation 2244 . 2245) (punctuation 2243 . 2244) (TYPENAME 2235 . 2243) (punctuation 2233 . 2234) (symbol 2231 . 2233) (TYPENAME 2222 . 2230) (punctuation 2220 . 2221) (symbol 2219 . 2220) (symbol 2212 . 2218) (punctuation 2211 . 2212) (TEMPLATE 2203 . 2211) (semantic-list 2087 . 2201) (semantic-list 2034 . 2086) (symbol 2020 . 2034) (punctuation 2063 . 2064) (punctuation 2062 . 2063) (punctuation 2061 . 2062) (punctuation 2060 . 2061) (punctuation 2059 . 2060) (punctuation 2045 . 2046) (symbol 2011 . 2019) (punctuation 2063 . 2064) (punctuation 2062 . 2063) (punctuation 2061 . 2062) (punctuation 2060 . 2061) (punctuation 2059 . 2060) (punctuation 2045 . 2046) (punctuation 2009 . 2010) (symbol 1996 . 2009) (punctuation 1994 . 1995) (punctuation 1993 . 1994) (punctuation 1992 . 1993) (TYPENAME 1984 . 1992) (punctuation 1982 . 1983) (symbol 1974 . 1982) (TYPENAME 1965 . 1973) (punctuation 1964 . 1965) (TEMPLATE 1956 . 1964) (punctuation 1953 . 1954) (semantic-list 1846 . 1953) (punctuation 1844 . 1845) (punctuation 1843 . 1844) (punctuation 1842 . 1843) (punctuation 1841 . 1842) (symbol 1828 . 1841) (punctuation 1826 . 1827) (symbol 1818 . 1826) (punctuation 1816 . 1817) (number 1815 . 1816) (punctuation 1814 . 1815) (symbol 1795 . 1814) (STRUCT 1788 . 1794) (punctuation 1786 . 1787) (symbol 1773 . 1786) (punctuation 1771 . 1772) (punctuation 1770 . 1771) (punctuation 1769 . 1770) (TYPENAME 1761 . 1769) (punctuation 1759 . 1760) (symbol 1751 . 1759) (TYPENAME 1742 . 1750) (punctuation 1741 . 1742) (TEMPLATE 1733 . 1741) (punctuation 1730 . 1731) (semantic-list 1583 . 1730) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (punctuation 1579 . 1580) (punctuation 1578 . 1579) (symbol 1565 . 1578) (punctuation 1563 . 1564) (symbol 1555 . 1563) (punctuation 1553 . 1554) (number 1552 . 1553) (punctuation 1551 . 1552) (symbol 1532 . 1551) (STRUCT 1525 . 1531) (punctuation 1523 . 1524) (symbol 1510 . 1523) (punctuation 1508 . 1509) (punctuation 1507 . 1508) (punctuation 1506 . 1507) (TYPENAME 1498 . 1506) (punctuation 1496 . 1497) (symbol 1488 . 1496) (TYPENAME 1479 . 1487) (punctuation 1478 . 1479) (TEMPLATE 1470 . 1478) (semantic-list 1324 . 1465) (semantic-list 1266 . 1319) (semantic-list 1264 . 1266) (OPERATOR 1256 . 1264) (punctuation 1295 . 1296) (punctuation 1294 . 1295) (punctuation 1293 . 1294) (punctuation 1292 . 1293) (punctuation 1291 . 1292) (punctuation 1277 . 1278) (symbol 1247 . 1255) (punctuation 1295 . 1296) (punctuation 1294 . 1295) (punctuation 1293 . 1294) (punctuation 1292 . 1293) (punctuation 1291 . 1292) (punctuation 1277 . 1278) (punctuation 1212 . 1213) (symbol 1199 . 1212) (punctuation 1197 . 1198) (punctuation 1196 . 1197) (punctuation 1195 . 1196) (TYPENAME 1187 . 1195) (punctuation 1185 . 1186) (symbol 1177 . 1185) (TYPENAME 1168 . 1176) (punctuation 1166 . 1167) (symbol 1165 . 1166) (symbol 1158 . 1164) (punctuation 1157 . 1158) (TEMPLATE 1149 . 1157) (semantic-list 1047 . 1147) (semantic-list 988 . 1046) (symbol 973 . 988) (punctuation 1023 . 1024) (CONST 1018 . 1023) (punctuation 1016 . 1017) (punctuation 1015 . 1016) (punctuation 1014 . 1015) (punctuation 1013 . 1014) (punctuation 999 . 1000) (symbol 968 . 972) (punctuation 1023 . 1024) (CONST 1018 . 1023) (punctuation 1016 . 1017) (punctuation 1015 . 1016) (punctuation 1014 . 1015) (punctuation 1013 . 1014) (punctuation 999 . 1000) (punctuation 966 . 967) (symbol 953 . 966) (punctuation 951 . 952) (punctuation 950 . 951) (punctuation 949 . 950) (TYPENAME 941 . 949) (punctuation 939 . 940) (symbol 931 . 939) (TYPENAME 922 . 930) (punctuation 921 . 922) (TEMPLATE 913 . 921) (semantic-list 850 . 911) (semantic-list 783 . 849) (symbol 763 . 783) (punctuation 847 . 848) (punctuation 846 . 847) (punctuation 845 . 846) (punctuation 844 . 845) (punctuation 838 . 839) (symbol 758 . 762) (punctuation 847 . 848) (punctuation 846 . 847) (punctuation 845 . 846) (punctuation 844 . 845) (punctuation 838 . 839) (punctuation 756 . 757) (symbol 751 . 756) (punctuation 749 . 750) (punctuation 748 . 749) (punctuation 747 . 748) (symbol 741 . 747) (punctuation 739 . 740) (symbol 731 . 739) (TYPENAME 722 . 730) (punctuation 720 . 721) (symbol 715 . 720) (TYPENAME 706 . 714) (punctuation 705 . 706) (TEMPLATE 697 . 705) (semantic-list 550 . 695) (semantic-list 528 . 549) (symbol 517 . 528) (symbol 512 . 516) (punctuation 510 . 511) (symbol 506 . 510) (punctuation 504 . 505) (punctuation 503 . 504) (punctuation 502 . 503) (TYPENAME 494 . 502) (punctuation 492 . 493) (symbol 489 . 492) (TYPENAME 480 . 488) (punctuation 479 . 480) (TEMPLATE 471 . 479) (semantic-list 423 . 469) (semantic-list 358 . 422) (symbol 342 . 358) (punctuation 420 . 421) (punctuation 419 . 420) (punctuation 418 . 419) (punctuation 417 . 418) (punctuation 411 . 412) (symbol 337 . 341) (punctuation 420 . 421) (punctuation 419 . 420) (punctuation 418 . 419) (punctuation 417 . 418) (punctuation 411 . 412) (punctuation 335 . 336) (symbol 330 . 335) (punctuation 328 . 329) (punctuation 327 . 328) (punctuation 326 . 327) (symbol 320 . 326) (punctuation 318 . 319) (symbol 314 . 318) (TYPENAME 305 . 313) (punctuation 303 . 304) (symbol 295 . 303) (TYPENAME 286 . 294) (punctuation 285 . 286) (TEMPLATE 277 . 285) (semantic-list 175 . 275) (semantic-list 150 . 174) (symbol 139 . 150) (symbol 134 . 138) (punctuation 132 . 133) (symbol 128 . 132) (TYPENAME 119 . 127) (punctuation 117 . 118) (symbol 113 . 117) (TYPENAME 104 . 112) (punctuation 102 . 103) (symbol 99 . 102) (TYPENAME 90 . 98) (punctuation 89 . 90) (TEMPLATE 81 . 89))
      :lexical-table 
        '(("VARIADIC_HPP")
          )
)
    (semanticdb-table "iterator_range.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("ITERATOR_RANGE_HPP" variable (:constant-flag t) nil [36 54])
            ("iterator" include (:system-flag t) nil [56 75])
            ("type_traits" include (:system-flag t) nil [76 98])
            ("is_const_iterator" type
               (:template 
                  ( ("Iterator" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("value" variable (:type "int") (reparse-symbol classsubparts) [503 509]))                  )
                nil [100 512])
            ("iterator_range_impl" type
               (:template 
                  ( ("bool" type nil nil nil)
                    ("Iterator" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [597 604])
                    ("iterator_range_impl" function
                       (:constructor-flag t
                        :arguments 
                          ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [626 641])
                            ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [642 655]))                          
                        :type ("iterator_range_impl" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [606 685])
                    ("begin" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [687 726])
                    ("end" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [728 763])
                    ("size" function
                       (:typemodifiers ("typename")
                        :type ("std::iterator_traits::difference_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [765 857])
                    ("const_iterator" variable
                       (:default-value "Iterator"
                        :type "int")
                        (reparse-symbol classsubparts) [866 892])
                    ("private" label nil (reparse-symbol classsubparts) [893 901])
                    ("begin_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [903 925])
                    ("end_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [903 925]))                  )
                nil [514 928])
            ("iterator_range_impl" type
               (:template 
                  ( ("Iterator" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1003 1010])
                    ("iterator_range_impl" function
                       (:constructor-flag t
                        :arguments 
                          ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1032 1047])
                            ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1048 1061]))                          
                        :type ("iterator_range_impl" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1012 1091])
                    ("begin" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1093 1132])
                    ("end" function (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1134 1169])
                    ("size" function
                       (:typemodifiers ("typename")
                        :type ("std::iterator_traits::difference_type" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1171 1263])
                    ("iterator" variable
                       (:default-value "Iterator"
                        :type "int")
                        (reparse-symbol classsubparts) [1272 1292])
                    ("private" label nil (reparse-symbol classsubparts) [1293 1301])
                    ("begin_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1303 1325])
                    ("end_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1303 1325]))                  
                :template-specifier 
                  ( ("false" type nil nil nil)
                    ("Iterator" type nil nil nil))                  )
                nil [930 1328]))          
      :file "iterator_range.hpp"
      :pointmax 1631
      :fsize 1630
      :lastmodtime '(22909 22924 38551 371000)
      :unmatched-syntax '((punctuation 1620 . 1621) (semantic-list 1454 . 1620) (punctuation 1452 . 1453) (symbol 1444 . 1452) (punctuation 1442 . 1443) (symbol 1437 . 1442) (punctuation 1436 . 1437) (punctuation 1435 . 1436) (punctuation 1434 . 1435) (symbol 1426 . 1434) (punctuation 1425 . 1426) (symbol 1408 . 1425) (punctuation 1407 . 1408) (symbol 1388 . 1407) (PUBLIC 1381 . 1387) (punctuation 1379 . 1380) (symbol 1364 . 1378) (CLASS 1358 . 1363) (punctuation 1356 . 1357) (symbol 1348 . 1356) (TYPENAME 1339 . 1347) (punctuation 1338 . 1339) (TEMPLATE 1330 . 1338) (USING 1266 . 1271) (USING 860 . 865) (punctuation 502 . 503) (punctuation 501 . 502) (punctuation 500 . 501) (symbol 465 . 469) (punctuation 464 . 465) (punctuation 463 . 464) (punctuation 462 . 463) (symbol 419 . 428) (punctuation 418 . 419) (punctuation 417 . 418) (punctuation 416 . 417) (symbol 371 . 379) (punctuation 330 . 331) (symbol 315 . 330) (punctuation 314 . 315) (punctuation 313 . 314) (symbol 310 . 313) (TYPENAME 301 . 309) (punctuation 263 . 264) (symbol 247 . 263) (punctuation 246 . 247) (punctuation 245 . 246) (symbol 242 . 245) (TYPENAME 233 . 241) (punctuation 198 . 199) (symbol 190 . 198) (punctuation 189 . 190) (punctuation 188 . 189) (symbol 185 . 188) (punctuation 183 . 184) (symbol 177 . 182) (BOOL 172 . 176) (CONST 166 . 171) (STATIC 159 . 165))
      :lexical-table 
        '(("ITERATOR_RANGE_HPP")
          )
)
    (semanticdb-table "named_type.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("NAMED_TYPE_HPP" variable (:constant-flag t) nil [32 46])
            ("functional" include (:system-flag t) nil [200 221])
            ("NamedType" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("Context" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [280 287])
                    ("NamedType" function
                       (:constructor-flag t
                        :arguments 
                          ( ("t" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [308 312]))                          
                        :type ("NamedType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [298 333])
                    ("get" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [335 356])
                    ("private" label nil (reparse-symbol classsubparts) [357 365])
                    ("t_" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [367 372]))                  )
                nil [223 375])
            ("NamedTypeRef" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("Context" type (:type "class") nil nil))                  
                :type "class"
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [437 444])
                    ("NamedTypeRef" function
                       (:constructor-flag t
                        :arguments 
                          ( ("t" variable
                               (:reference 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [468 473]))                          
                        :type ("NamedTypeRef" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [455 493])
                    ("get" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [495 522])
                    ("private" label nil (reparse-symbol classsubparts) [523 531])
                    ("t_" variable (:type ("std::reference_wrapper" type
                         (:template-specifier 
                            ( ("T" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [533 562]))                  )
                nil [377 565]))          
      :file "named_type.hpp"
      :pointmax 576
      :fsize 575
      :lastmodtime '(22909 22924 38551 371000)
      :unmatched-syntax '((EXPLICIT 446 . 454) (EXPLICIT 289 . 297))
      :lexical-table 
        '(("NAMED_TYPE_HPP")
          )
))
  :file "!home!shixin!course!range!ranges!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
